* {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

/*imports */

@import url('https://fonts.googleapis.com/css?family=Roboto:300');


/* MAIN STYLES */

:root {
  /* --primColor: #dcdcdc; */
  --primBack: #e9e9e9;
  --secoBack: #555555;
  --cornerRad: 4px;
  --auraColor1: #4c639b;
  --auraColor2: #1f2a3e;
  --auraColor3: #436a81;
  --auraColor4: #5564b4;
  --auraColor5: #040c0b;
}

body {
  background-color: var(--primBack);
  font-family: Arial, Helvetica, sans-serif;
}

label {
  display: inline-block;
  cursor: pointer;
  font-size: 16px;
  font-weight: bold;
  color: var(--auraColor4);
  background-color: transparent;
  padding: 10px 20px;
  border-radius: 4px;
  transition: background-color 0.2s;
  text-align: center;
}

a {
  color: var(--auraColor2);
  text-decoration: none; /* Remove underline from links */
  }


label:hover {
  background-color: transparent;
}

input[type="file"] {
  display: none; /* Hide the input element */
}

/* CLASSES */


/* Search Bar */
.search {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 80px; 
  width: 300px;
  margin: 0 auto;
  
  padding: 0 10px;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  animation: fadeIn 2s;

  /*border-style: solid;*/
}

/* input type="text" name="search" placeholder="Search..." id="query"> */
.search input[type="text"] {
  border: 2px solid var(--auraColor2);
  border-radius: 20px;
  padding: 5px 10px;
  font-size: 12px;
  outline: none;
  background-color: transparent;
  color: var(--auraColor2);
}

.search input[type="text"]::placeholder {
  color: var(--auraColor2);
  font-family: Arial, Helvetica, sans-serif;
}

/* ---- Search response <div class="response"> */
.search button {
  background: transparent;
  border: 2px solid var(--auraColor2);
  color: var(--auraColor3);
  font-size: 12px;
  font-weight: bold;
  padding: 5px 10px;
  text-transform: uppercase;
  transition: all 0.1s ease-in-out;
  cursor: pointer;
  display: inline-block;
  position: relative;
  overflow: hidden;
  z-index: 1;
  border-radius: 5px;
}

.search button:hover {
  background: var(--auraColor2);
  color: var(--primBack);
}

.search button::before {
  content: "";
  background: var(--auraColor2);
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transform: scaleX(0);
  transform-origin: left;
  transition: transform 0.1s ease-in-out;
}

.search button:hover::before {
  transform: scaleX(1);
}


.response {
  position: fixed;
  bottom: 30%;
  left: 50%;
  transform: translate(-50%, 50%);
  /* border-style: solid; */
  height: 200px;
  width: 1100px
}

.response div {
  position: relative; /* Make the div element a positioned element */
}

.entry {
  opacity: 0;
  animation: fadeIn 1s;
  animation-fill-mode: forwards; /* Keep the element at full visibility after the animation is done */
}

.entry:nth-child(1) {
  animation-delay: 0.1s;
}

.entry:nth-child(2) {
  animation-delay: 0.2s;
}

.entry:nth-child(3) {
  animation-delay: 0.3s;
}

@keyframes fadeIn {
  from {
    opacity: 0; /* Start from transparency */
  }
  to {
    opacity: 1; /* End at full visibility */
  }
}

.response p {
  font-size: 10px;
  color: var(--auraColor2);
  margin: 0;
  padding: 0;
}

.response ul {
  list-style: none; /* Remove the bullet points */
  display: flex; /* Make the list items display horizontally */
  flex-wrap: wrap; /* Allow the list items to wrap onto multiple lines if necessary */
  position: relative;
  margin: 0;
  padding: 0;
}

.response li {
  list-style: none;
  margin: 10px 0;
  padding: 0;
  font-size: 10px;
  /* Add a fixed width and height and set the overflow to hidden */
  width: 200px;
  height: 200px;
  overflow: hidden;
  /* Add some padding to give it some space between the content and the edges of the square */
  padding: 10px;
}
   
  .response button:hover {
    background-color: var(--auraColor2);
    color: white;
  }

  .response button {
    position: absolute; /* Make the button element a positioned element */
    bottom: 0; /* Position the button element at the bottom of the div element */
    display: block;
    width: 70px;
    height: 20px;
    margin: 3px;
    text-align: center;
    border: 2px solid var(--auraColor2);
    border-radius: 5px;
    text-decoration: none;
    color: var(--auraColor2);
    font-size: 8px;
    font-weight: bold;
    background-color: transparent;
    cursor: pointer;
    opacity: 0.9;
    }
    
    #pdf {
      bottom: 25px;
    }

    .response button:hover {
      cursor: pointer;
      background-color: var(--auraColor3);
      color: white;
    }


.response h4 {
  font-size: 12px;
  color: var(--auraColor2);
  margin: 0;
  padding: 0;
}

.response h4:hover {
  color: var(--auraColor3);
}

.home-icon {
  position: fixed;
  top: 20px;
  left: 5%;
  transform: translateX(-50%);
  z-index: 999;
  font-size: 15px;
  color: var(--auraColor2);
  text-decoration: none;
  animation: fadeIn 1s;
  animation-fill-mode: forwards;
}

.shake {
  animation: shake 0.5s;
}

@keyframes shake {
  0% { transform: translate(1px, 1px) rotate(0deg); }
  10% { transform: translate(-1px, -2px) rotate(-1deg); }
  20% { transform: translate(-3px, 0px) rotate(1deg); }
  30% { transform: translate(3px, 2px) rotate(0deg); }
  40% { transform: translate(1px, -1px) rotate(1deg); }
  50% { transform: translate(-1px, 2px) rotate(-1deg); }
  60% { transform: translate(-3px, 1px) rotate(0deg); }
  70% { transform: translate(3px, 1px) rotate(-1deg); }
  80% { transform: translate(-1px, -1px) rotate(1deg); }
  90% { transform: translate(1px, 2px) rotate(0deg); }
  100% { transform: translate(1px, -2px) rotate(-1deg); }
}
